{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport * as BookAPI from '../BooksAPI';\n\nconst Output = (argone, argtwo, argthree, argfour) => {\n  /* if(argone ==='search'){\r\n      if(argthree !== ''){\r\n          const SearchResult = async () =>{\r\n              const data = await BookAPI.search(argthree);\r\n              return data;\r\n          }\r\n          SearchResult()\r\n              .then(res => {argtwo([...res]);})\r\n                  .catch(() => {\r\n                      argtwo(\"No results\");\r\n                      });\r\n      }\r\n        if(argtwo === ''){\r\n          argone([]);\r\n      }\r\n  }\r\n    \r\n  \r\n  if(argone ==='update'){\r\n      const UpdataResult = async () =>{\r\n          const update = await BookAPI.update(argtwo, argthree);\r\n          return update;\r\n      }\r\n      UpdataResult()\r\n              .catch((err) => {\r\n                  console.groupCollapsed('Update error')\r\n                  console.group(err)\r\n                  console.group('%c Error occured when fetching books when update',\r\n                  'background-color:black; font-size:20px;color:red;');\r\n                  console.groupEnd('Update error')});\r\n  }\r\n  \r\n  if(argone === 'getall'){\r\n      const SearchResult = async () =>{\r\n          const data = await BookAPI.getAll();\r\n          return data;\r\n      }\r\n      SearchResult()\r\n          .then(res => {argtwo(res)})\r\n              .catch((err) => {\r\n                  console.groupCollapsed('Update error')\r\n                  console.group(err)\r\n                  console.group('%c Error occured when fetching books when update',\r\n                  'background-color:black; font-size:20px;color:red;');\r\n                  console.groupEnd('Update error')});\r\n  }\r\n    if(argone === 'get'){\r\n      const SearchResult = async () =>{\r\n          const data = await BookAPI.get(argtwo);\r\n          return data;\r\n      }\r\n      SearchResult()\r\n          .then(res => {console.log(res);})\r\n              .catch(() => {\r\n                  console.log('%c Error occured when fetching books when getAll',\r\n                  'background-color:black; font-size:20px;color:red;');\r\n      });\r\n  } */\n};\n\n_c = Output;\nexport default Output;\n\nvar _c;\n\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"sources":["C:/Users/abosa/Desktop/MyReads/starter/src/Components/Output.js"],"names":["BookAPI","Output","argone","argtwo","argthree","argfour"],"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,aAAzB;;AAEA,MAAMC,MAAM,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,QAAjB,EAA2BC,OAA3B,KAAsC;AAGjD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKC,CAjED;;KAAMJ,M;AAkEN,eAAeA,MAAf","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport * as BookAPI from '../BooksAPI';\r\n\r\nconst Output = (argone, argtwo, argthree, argfour) =>{\r\n    \r\n\r\n    /* if(argone ==='search'){\r\n        if(argthree !== ''){\r\n            const SearchResult = async () =>{\r\n                const data = await BookAPI.search(argthree);\r\n                return data;\r\n            }\r\n            SearchResult()\r\n                .then(res => {argtwo([...res]);})\r\n                    .catch(() => {\r\n                        argtwo(\"No results\");\r\n                        });\r\n        }\r\n\r\n        if(argtwo === ''){\r\n            argone([]);\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    if(argone ==='update'){\r\n        const UpdataResult = async () =>{\r\n            const update = await BookAPI.update(argtwo, argthree);\r\n            return update;\r\n        }\r\n        UpdataResult()\r\n                .catch((err) => {\r\n                    console.groupCollapsed('Update error')\r\n                    console.group(err)\r\n                    console.group('%c Error occured when fetching books when update',\r\n                    'background-color:black; font-size:20px;color:red;');\r\n                    console.groupEnd('Update error')});\r\n    }\r\n    \r\n    if(argone === 'getall'){\r\n        const SearchResult = async () =>{\r\n            const data = await BookAPI.getAll();\r\n            return data;\r\n        }\r\n        SearchResult()\r\n            .then(res => {argtwo(res)})\r\n                .catch((err) => {\r\n                    console.groupCollapsed('Update error')\r\n                    console.group(err)\r\n                    console.group('%c Error occured when fetching books when update',\r\n                    'background-color:black; font-size:20px;color:red;');\r\n                    console.groupEnd('Update error')});\r\n    }\r\n\r\n    if(argone === 'get'){\r\n        const SearchResult = async () =>{\r\n            const data = await BookAPI.get(argtwo);\r\n            return data;\r\n        }\r\n        SearchResult()\r\n            .then(res => {console.log(res);})\r\n                .catch(() => {\r\n                    console.log('%c Error occured when fetching books when getAll',\r\n                    'background-color:black; font-size:20px;color:red;');\r\n        });\r\n    } */\r\n\r\n}\r\nexport default Output;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}