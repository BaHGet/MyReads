{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport * as BookAPI from '../BooksAPI';\n\nconst Output = (argone, argtwo, argthree) => {\n  if (argone === 'search') {\n    if (argthree !== '') {\n      const SearchResult = async () => {\n        const data = await BookAPI.search(arargthreegtwo);\n        return data;\n      };\n\n      SearchResult().then(res => {\n        argone([...res]);\n      }).catch(() => {\n        argone(\"No results\");\n      });\n    }\n\n    if (argtwo === '') {\n      argone([]);\n    }\n  }\n\n  if (argone === 'update') {\n    const UpdataResult = async () => {\n      const update = await BookAPI.update(argone, argtwo);\n      return update;\n    };\n\n    UpdataResult().then(update => {\n      console.log(update, 'update');\n    }).catch(() => {\n      console.log('%c Error occured when fetching books when update', 'background-color:black; font-size:20px;color:red;');\n    });\n  }\n\n  if (argone === 'getall') {\n    const SearchResult = async () => {\n      const data = await BookAPI.getAll();\n      return data;\n    };\n\n    SearchResult().then(res => {\n      return res;\n    }).catch(() => {\n      console.log('%c Error occured when fetching books when getAll', 'background-color:black; font-size:20px;color:red;');\n    });\n  }\n\n  if (argone === 'get') {\n    const SearchResult = async () => {\n      const data = await BookAPI.get(argtwo);\n      return data;\n    };\n\n    SearchResult().then(res => {\n      console.log(res);\n    }).catch(() => {\n      console.log('%c Error occured when fetching books when getAll', 'background-color:black; font-size:20px;color:red;');\n    });\n  }\n};\n\n_c = Output;\nexport default Output;\n\nvar _c;\n\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"sources":["C:/Users/abosa/Desktop/MyReads/starter/src/Components/Output.js"],"names":["BookAPI","Output","argone","argtwo","argthree","SearchResult","data","search","arargthreegtwo","then","res","catch","UpdataResult","update","console","log","getAll","get"],"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,aAAzB;;AAEA,MAAMC,MAAM,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,QAAjB,KAA6B;AAGxC,MAAGF,MAAM,KAAI,QAAb,EAAsB;AAClB,QAAGE,QAAQ,KAAK,EAAhB,EAAmB;AACf,YAAMC,YAAY,GAAG,YAAW;AAC5B,cAAMC,IAAI,GAAG,MAAMN,OAAO,CAACO,MAAR,CAAeC,cAAf,CAAnB;AACA,eAAOF,IAAP;AACH,OAHD;;AAIAD,MAAAA,YAAY,GACPI,IADL,CACUC,GAAG,IAAI;AAACR,QAAAA,MAAM,CAAC,CAAC,GAAGQ,GAAJ,CAAD,CAAN;AAAkB,OADpC,EAESC,KAFT,CAEe,MAAM;AACTT,QAAAA,MAAM,CAAC,YAAD,CAAN;AACC,OAJb;AAKH;;AAED,QAAGC,MAAM,KAAK,EAAd,EAAiB;AACbD,MAAAA,MAAM,CAAC,EAAD,CAAN;AACH;AACJ;;AAID,MAAGA,MAAM,KAAI,QAAb,EAAsB;AAClB,UAAMU,YAAY,GAAG,YAAW;AAC5B,YAAMC,MAAM,GAAG,MAAMb,OAAO,CAACa,MAAR,CAAeX,MAAf,EAAuBC,MAAvB,CAArB;AACA,aAAOU,MAAP;AACH,KAHD;;AAIAD,IAAAA,YAAY,GACPH,IADL,CACUI,MAAM,IAAI;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,QAApB;AAA8B,KADnD,EAESF,KAFT,CAEe,MAAM;AACTG,MAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ,EACA,mDADA;AAEX,KALD;AAMH;;AAED,MAAGb,MAAM,KAAK,QAAd,EAAuB;AACnB,UAAMG,YAAY,GAAG,YAAW;AAC5B,YAAMC,IAAI,GAAG,MAAMN,OAAO,CAACgB,MAAR,EAAnB;AACA,aAAOV,IAAP;AACH,KAHD;;AAIAD,IAAAA,YAAY,GACPI,IADL,CACUC,GAAG,IAAI;AAAC,aAAOA,GAAP;AAAW,KAD7B,EAESC,KAFT,CAEe,MAAM;AACTG,MAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ,EACA,mDADA;AAEX,KALD;AAMH;;AAED,MAAGb,MAAM,KAAK,KAAd,EAAoB;AAChB,UAAMG,YAAY,GAAG,YAAW;AAC5B,YAAMC,IAAI,GAAG,MAAMN,OAAO,CAACiB,GAAR,CAAYd,MAAZ,CAAnB;AACA,aAAOG,IAAP;AACH,KAHD;;AAIAD,IAAAA,YAAY,GACPI,IADL,CACUC,GAAG,IAAI;AAACI,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AAAkB,KADpC,EAESC,KAFT,CAEe,MAAM;AACTG,MAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ,EACA,mDADA;AAEX,KALD;AAMH;AAEJ,CA9DD;;KAAMd,M;AA+DN,eAAeA,MAAf","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport * as BookAPI from '../BooksAPI';\r\n\r\nconst Output = (argone, argtwo, argthree) =>{\r\n    \r\n\r\n    if(argone ==='search'){\r\n        if(argthree !== ''){\r\n            const SearchResult = async () =>{\r\n                const data = await BookAPI.search(arargthreegtwo);\r\n                return data;\r\n            }\r\n            SearchResult()\r\n                .then(res => {argone([...res]);})\r\n                    .catch(() => {\r\n                        argone(\"No results\");\r\n                        });\r\n        }\r\n\r\n        if(argtwo === ''){\r\n            argone([]);\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    if(argone ==='update'){\r\n        const UpdataResult = async () =>{\r\n            const update = await BookAPI.update(argone, argtwo);\r\n            return update;\r\n        }\r\n        UpdataResult()\r\n            .then(update => {console.log(update, 'update')})\r\n                .catch(() => {\r\n                    console.log('%c Error occured when fetching books when update',\r\n                    'background-color:black; font-size:20px;color:red;');\r\n        });\r\n    }\r\n    \r\n    if(argone === 'getall'){\r\n        const SearchResult = async () =>{\r\n            const data = await BookAPI.getAll();\r\n            return data;\r\n        }\r\n        SearchResult()\r\n            .then(res => {return res})\r\n                .catch(() => {\r\n                    console.log('%c Error occured when fetching books when getAll',\r\n                    'background-color:black; font-size:20px;color:red;');\r\n        });\r\n    }\r\n\r\n    if(argone === 'get'){\r\n        const SearchResult = async () =>{\r\n            const data = await BookAPI.get(argtwo);\r\n            return data;\r\n        }\r\n        SearchResult()\r\n            .then(res => {console.log(res);})\r\n                .catch(() => {\r\n                    console.log('%c Error occured when fetching books when getAll',\r\n                    'background-color:black; font-size:20px;color:red;');\r\n        });\r\n    }\r\n\r\n}\r\nexport default Output;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}