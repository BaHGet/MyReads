{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport * as BookAPI from '../BooksAPI';\n\nconst Output = (argone, argtwo, argthree, argfour) => {\n  if (argone === 'search') {\n    if (argthree !== '') {\n      const SearchResult = async () => {\n        const data = await BookAPI.search(argthree);\n        return data;\n      };\n\n      SearchResult().then(res => {\n        argtwo([...res]);\n      }).catch(() => {\n        argtwo(\"No results\");\n      });\n    }\n\n    if (argtwo === '') {\n      argone([]);\n    }\n  }\n\n  if (argone === 'update') {\n    const UpdataResult = async () => {\n      const update = await BookAPI.update(argtwo, argthree);\n      return update;\n    };\n\n    UpdataResult().catch(err => {\n      console.groupCollapsed('Update error');\n      console.group(err);\n      console.group('%c Error occured when fetching books when update', 'background-color:black; font-size:20px;color:red;');\n      console.groupEnd('Update error');\n    });\n  }\n\n  if (argone === 'getall') {\n    const SearchResult = async () => {\n      const data = await BookAPI.getAll();\n      return data;\n    };\n\n    SearchResult().then(res => {\n      argtwo(res);\n    }).catch(err => {\n      console.groupCollapsed('Update error');\n      console.group(err);\n      console.group('%c Error occured when fetching books when update', 'background-color:black; font-size:20px;color:red;');\n      console.groupEnd('Update error');\n    });\n  }\n\n  if (argone === 'get') {\n    const SearchResult = async () => {\n      const data = await BookAPI.get(argtwo);\n      return data;\n    };\n\n    SearchResult().then(res => {\n      console.log(res);\n    }).catch(() => {\n      console.log('%c Error occured when fetching books when getAll', 'background-color:black; font-size:20px;color:red;');\n    });\n  }\n};\n\n_c = Output;\nexport default Output;\n\nvar _c;\n\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"sources":["C:/Users/abosa/Desktop/MyReads/starter/src/Components/Output.js"],"names":["BookAPI","Output","argone","argtwo","argthree","argfour","SearchResult","data","search","then","res","catch","UpdataResult","update","err","console","groupCollapsed","group","groupEnd","getAll","get","log"],"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,aAAzB;;AAEA,MAAMC,MAAM,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,QAAjB,EAA2BC,OAA3B,KAAsC;AAGjD,MAAGH,MAAM,KAAI,QAAb,EAAsB;AAClB,QAAGE,QAAQ,KAAK,EAAhB,EAAmB;AACf,YAAME,YAAY,GAAG,YAAW;AAC5B,cAAMC,IAAI,GAAG,MAAMP,OAAO,CAACQ,MAAR,CAAeJ,QAAf,CAAnB;AACA,eAAOG,IAAP;AACH,OAHD;;AAIAD,MAAAA,YAAY,GACPG,IADL,CACUC,GAAG,IAAI;AAACP,QAAAA,MAAM,CAAC,CAAC,GAAGO,GAAJ,CAAD,CAAN;AAAkB,OADpC,EAESC,KAFT,CAEe,MAAM;AACTR,QAAAA,MAAM,CAAC,YAAD,CAAN;AACC,OAJb;AAKH;;AAED,QAAGA,MAAM,KAAK,EAAd,EAAiB;AACbD,MAAAA,MAAM,CAAC,EAAD,CAAN;AACH;AACJ;;AAID,MAAGA,MAAM,KAAI,QAAb,EAAsB;AAClB,UAAMU,YAAY,GAAG,YAAW;AAC5B,YAAMC,MAAM,GAAG,MAAMb,OAAO,CAACa,MAAR,CAAeV,MAAf,EAAuBC,QAAvB,CAArB;AACA,aAAOS,MAAP;AACH,KAHD;;AAIAD,IAAAA,YAAY,GACHD,KADT,CACgBG,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,cAAR,CAAuB,cAAvB;AACAD,MAAAA,OAAO,CAACE,KAAR,CAAcH,GAAd;AACAC,MAAAA,OAAO,CAACE,KAAR,CAAc,kDAAd,EACA,mDADA;AAEAF,MAAAA,OAAO,CAACG,QAAR,CAAiB,cAAjB;AAAiC,KAN7C;AAOH;;AAED,MAAGhB,MAAM,KAAK,QAAd,EAAuB;AACnB,UAAMI,YAAY,GAAG,YAAW;AAC5B,YAAMC,IAAI,GAAG,MAAMP,OAAO,CAACmB,MAAR,EAAnB;AACA,aAAOZ,IAAP;AACH,KAHD;;AAIAD,IAAAA,YAAY,GACPG,IADL,CACUC,GAAG,IAAI;AAACP,MAAAA,MAAM,CAACO,GAAD,CAAN;AAAY,KAD9B,EAESC,KAFT,CAEgBG,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,cAAR,CAAuB,cAAvB;AACAD,MAAAA,OAAO,CAACE,KAAR,CAAcH,GAAd;AACAC,MAAAA,OAAO,CAACE,KAAR,CAAc,kDAAd,EACA,mDADA;AAEAF,MAAAA,OAAO,CAACG,QAAR,CAAiB,cAAjB;AAAiC,KAP7C;AAQH;;AAED,MAAGhB,MAAM,KAAK,KAAd,EAAoB;AAChB,UAAMI,YAAY,GAAG,YAAW;AAC5B,YAAMC,IAAI,GAAG,MAAMP,OAAO,CAACoB,GAAR,CAAYjB,MAAZ,CAAnB;AACA,aAAOI,IAAP;AACH,KAHD;;AAIAD,IAAAA,YAAY,GACPG,IADL,CACUC,GAAG,IAAI;AAACK,MAAAA,OAAO,CAACM,GAAR,CAAYX,GAAZ;AAAkB,KADpC,EAESC,KAFT,CAEe,MAAM;AACTI,MAAAA,OAAO,CAACM,GAAR,CAAY,kDAAZ,EACA,mDADA;AAEX,KALD;AAMH;AAEJ,CAjED;;KAAMpB,M;AAkEN,eAAeA,MAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport * as BookAPI from '../BooksAPI';\n\nconst Output = (argone, argtwo, argthree, argfour) =>{\n    \n\n    if(argone ==='search'){\n        if(argthree !== ''){\n            const SearchResult = async () =>{\n                const data = await BookAPI.search(argthree);\n                return data;\n            }\n            SearchResult()\n                .then(res => {argtwo([...res]);})\n                    .catch(() => {\n                        argtwo(\"No results\");\n                        });\n        }\n\n        if(argtwo === ''){\n            argone([]);\n        }\n    }\n\n    \n    \n    if(argone ==='update'){\n        const UpdataResult = async () =>{\n            const update = await BookAPI.update(argtwo, argthree);\n            return update;\n        }\n        UpdataResult()\n                .catch((err) => {\n                    console.groupCollapsed('Update error')\n                    console.group(err)\n                    console.group('%c Error occured when fetching books when update',\n                    'background-color:black; font-size:20px;color:red;');\n                    console.groupEnd('Update error')});\n    }\n    \n    if(argone === 'getall'){\n        const SearchResult = async () =>{\n            const data = await BookAPI.getAll();\n            return data;\n        }\n        SearchResult()\n            .then(res => {argtwo(res)})\n                .catch((err) => {\n                    console.groupCollapsed('Update error')\n                    console.group(err)\n                    console.group('%c Error occured when fetching books when update',\n                    'background-color:black; font-size:20px;color:red;');\n                    console.groupEnd('Update error')});\n    }\n\n    if(argone === 'get'){\n        const SearchResult = async () =>{\n            const data = await BookAPI.get(argtwo);\n            return data;\n        }\n        SearchResult()\n            .then(res => {console.log(res);})\n                .catch(() => {\n                    console.log('%c Error occured when fetching books when getAll',\n                    'background-color:black; font-size:20px;color:red;');\n        });\n    }\n\n}\nexport default Output;\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}