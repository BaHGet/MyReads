{"version":3,"sources":["Components/MainPage.js","BooksAPI.js","Components/Output.js","Makeing Scripts/MakeSearchResultes.js","Components/SearchPage.js","App.js","index.js"],"names":["BookShelf","Shelf","handleMoveToShelf","useState","books","setBooks","update","setUpdate","handleMoving","e","book","shelf","target","value","prev","filter","obj","id","useEffect","className","map","undefined","imageLinks","style","width","height","backgroundImage","thumbnail","defaultValue","onChange","title","authors","to","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","Output","argone","argtwo","argthree","argfour","a","query","maxResults","BookAPI","fetch","method","body","JSON","stringify","then","res","json","data","catch","error","console","log","SearchResult","UpdataResult","err","groupCollapsed","group","groupEnd","bookId","HandleResult","result","returnvalue","setReturnvalue","length","hasOwnProperty","SearchPage","setResult","inputElement","useRef","current","focus","type","placeholder","setInterval","window","location","reload","ref","App","setShelf","updatestate","setUpdateState","href","origin","exact","path","element","MainPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.efda3ba2.chunk.js","sourcesContent":["/* eslint-disable array-callback-return */\r\nimport { useEffect, useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst BookShelf = ({Shelf, handleMoveToShelf}) => {\r\n  const [books , setBooks] = useState(['loading...']);\r\n  const [update, setUpdate] = useState(false);\r\n  \r\n  const handleMoving = (e, book) =>{\r\n    const shelf = e.target.value;\r\n    if(shelf === 'none'){\r\n      setBooks((prev) =>(prev.filter(obj => obj.id !== book.id)));\r\n    }\r\n    if(book.shelf){\r\n      setBooks((prev) =>(prev.filter(obj => obj.id !== book.id)))\r\n      setBooks(prev =>([...prev, book]))\r\n    }\r\n    handleMoveToShelf(book, shelf)\r\n    setUpdate(!update)\r\n  };\r\n\r\n  useEffect(() => {\r\n      setBooks([...Shelf])\r\n  }, [update, Shelf])\r\n  \r\n\r\n  return (\r\n    <div className='app'>\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n\r\n      <div className=\"list-books-content\">\r\n                <div className=\"bookshelf\">\r\n                  <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                  <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                      {\r\n                        books.map((book) => {\r\n                          if(book.shelf === 'currentlyReading'){\r\n                            return(\r\n                              <li key={book.id}>\r\n                                    <div className=\"book\">\r\n                                        <div className=\"book-top\">\r\n                                        {book.imageLinks === undefined ?\r\n                                                <div\r\n                                                className=\"book-cover\"\r\n                                                style={{\r\n                                                width: 128,\r\n                                                height: 193\r\n                                                }}\r\n                                                >No Iamge</div>\r\n                                            :\r\n                                                <div\r\n                                                className=\"book-cover\"\r\n                                                style={{\r\n                                                width: 128,\r\n                                                height: 193,\r\n                                                backgroundImage:\r\n                                                `url(${book.imageLinks.thumbnail})`\r\n                                                }}\r\n                                                ></div>\r\n                                            }\r\n                                            <div className=\"book-shelf-changer\">\r\n                                              <select defaultValue='currentlyReading' onChange={(e) => handleMoving(e, book)} id={book.id}>\r\n                                                <option value=\"none\" className=\"disabled-option\">Move to... </option>\r\n                                                <option value=\"currentlyReading\" >✔  Currently Reading</option>\r\n                                                <option value=\"wantToRead\">Want to Read</option>\r\n                                                <option value=\"read\">Read</option>\r\n                                                <option value=\"none\">None</option>\r\n                                              </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"book-title\">{book.title}</div>\r\n                                        <div className=\"book-authors\">{book.authors}</div>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                          }\r\n                        })\r\n                      }\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n      </div>\r\n      \r\n      <div className=\"list-books-content\">\r\n                <div className=\"bookshelf\">\r\n                  <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n                  <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                      {\r\n                        books.map((book) => {\r\n                          if(book.shelf === 'wantToRead'){\r\n                            return(\r\n                              <li key={book.id}>\r\n                                    <div className=\"book\">\r\n                                        <div className=\"book-top\">\r\n                                        {book.imageLinks === undefined ?\r\n                                                <div\r\n                                                className=\"book-cover\"\r\n                                                style={{\r\n                                                width: 128,\r\n                                                height: 193\r\n                                                }}\r\n                                                >No Iamge</div>\r\n                                            :\r\n                                                <div\r\n                                                className=\"book-cover\"\r\n                                                style={{\r\n                                                width: 128,\r\n                                                height: 193,\r\n                                                backgroundImage:\r\n                                                `url(${book.imageLinks.thumbnail})`\r\n                                                }}\r\n                                                ></div>\r\n                                            }\r\n                                            <div className=\"book-shelf-changer\">\r\n                                              <select defaultValue='wantToRead' onChange={(e) => handleMoving(e, book)} id={book.id} >\r\n                                                <option value=\"none\" className=\"disabled-option\">Move to... </option>\r\n                                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                                <option value=\"wantToRead\">✔  Want to Read</option>\r\n                                                <option value=\"read\">Read</option>\r\n                                                <option value=\"none\">None</option>\r\n                                              </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"book-title\">{book.title}</div>\r\n                                        <div className=\"book-authors\">{book.authors}</div>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                          }\r\n                        })\r\n                      }\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n      </div>\r\n\r\n      <div className=\"list-books-content\">\r\n                <div className=\"bookshelf\">\r\n                  <h2 className=\"bookshelf-title\">Read</h2>\r\n                  <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                      {\r\n                        books.map((book) => {\r\n                          if(book.shelf === 'read'){\r\n                            return(\r\n                              <li key={book.id}>\r\n                                    <div className=\"book\">\r\n                                        <div className=\"book-top\">\r\n                                        {book.imageLinks === undefined ?\r\n                                                <div\r\n                                                className=\"book-cover\"\r\n                                                style={{\r\n                                                width: 128,\r\n                                                height: 193\r\n                                                }}\r\n                                                >No Iamge</div>\r\n                                            :\r\n                                                <div\r\n                                                className=\"book-cover\"\r\n                                                style={{\r\n                                                width: 128,\r\n                                                height: 193,\r\n                                                backgroundImage:\r\n                                                `url(${book.imageLinks.thumbnail})`\r\n                                                }}\r\n                                                ></div>\r\n                                            }\r\n                                            <div className=\"book-shelf-changer\">\r\n                                              <select defaultValue='read' onChange={(e) => handleMoving(e, book)} id={book.id}>\r\n                                                  <option value=\"none\" className=\"disabled-option\">Move to... </option>\r\n                                                  <option value=\"currentlyReading\">Currently Reading</option>\r\n                                                  <option value=\"wantToRead\">Want to Read</option>\r\n                                                  <option value=\"read\" >✔  Read</option>\r\n                                                  <option value=\"none\">None</option>\r\n                                              </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"book-title\">{book.title}</div>\r\n                                        <div className=\"book-authors\">{book.authors}</div>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                          }\r\n                        })\r\n                      }\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n      </div>\r\n\r\n    </div>\r\n    <div className='open-search'>\r\n      <Link to=\"/Search\" >Add a book </Link>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookShelf;\r\n","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n  .then((res) => res.json())\r\n  .then((data) => data.book)\r\n  .catch((error) => console.log(error));\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books)\r\n    .catch((error) => console.log(error));\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json())\r\n  .catch((error) => console.log(error));\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books)\r\n    .catch((error) => console.log(error))\r\n","/* eslint-disable no-unused-vars */\r\nimport * as BookAPI from '../BooksAPI';\r\n\r\nconst Output = (argone, argtwo, argthree, argfour) =>{\r\n    \r\n\r\n    if(argone ==='search'){\r\n        if(argthree !== ''){\r\n            const SearchResult = async () =>{\r\n                const data = await BookAPI.search(argthree);\r\n                return data;\r\n            }\r\n            SearchResult()\r\n                .then(res => {argtwo([...res]);})\r\n                    .catch(() => {\r\n                        argtwo(\"No results\");\r\n                        });\r\n        }\r\n\r\n        if(argtwo === ''){\r\n            argone([]);\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    if(argone ==='update'){\r\n        const UpdataResult = async () =>{\r\n            const update = await BookAPI.update(argtwo, argthree);\r\n            return update;\r\n        }\r\n        UpdataResult()\r\n                .catch((err) => {\r\n                    console.groupCollapsed('Update error')\r\n                    console.group(err)\r\n                    console.group('%c Error occured when fetching books when update',\r\n                    'background-color:black; font-size:20px;color:red;');\r\n                    console.groupEnd('Update error')});\r\n    }\r\n    \r\n    if(argone === 'getall'){\r\n        const SearchResult = async () =>{\r\n            const data = await BookAPI.getAll();\r\n            return data;\r\n        }\r\n        SearchResult()\r\n            .then(res => {argtwo(res)})\r\n                .catch((err) => {\r\n                    console.groupCollapsed('Update error')\r\n                    console.group(err)\r\n                    console.group('%c Error occured when fetching books when update',\r\n                    'background-color:black; font-size:20px;color:red;');\r\n                    console.groupEnd('Update error')});\r\n    }\r\n\r\n    if(argone === 'get'){\r\n        const SearchResult = async () =>{\r\n            const data = await BookAPI.get(argtwo);\r\n            return data;\r\n        }\r\n        SearchResult()\r\n            .then(res => {console.log(res);})\r\n                .catch(() => {\r\n                    console.log('%c Error occured when fetching books when getAll',\r\n                    'background-color:black; font-size:20px;color:red;');\r\n        });\r\n    }\r\n\r\n}\r\nexport default Output;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nconst HandleResult = ({result,  handleMoveToShelf, Shelf}) =>{\r\n    const [returnvalue, setReturnvalue] =useState('Type in search box');\r\n    \r\n    \r\n\r\n\r\n    const handleMoving = (e) =>{\r\n        const book = result.filter(obj => obj.id === e.target.id)\r\n        const shelf = e.target.value;\r\n        handleMoveToShelf(book, shelf)\r\n    };\r\n    \r\n    useEffect(() =>{\r\n        if(result === [] || result === null || result === 'Type in search box'){\r\n            setReturnvalue('Type in search box');\r\n        }\r\n        if(result ===\"No results\"){\r\n            setReturnvalue(\"No results\");\r\n        }\r\n        if(result.length !== 0 && typeof result == 'object'){\r\n            setReturnvalue(\r\n                    <ol className=\"books-grid\">\r\n                        {result.map(obj =>{\r\n                            Shelf.map(book =>{\r\n                                if(obj.id === book.id){\r\n                                    obj.shelf = book.shelf\r\n                                }\r\n                            })\r\n                            return(\r\n                                <li key={obj.id}>\r\n                                    <div className=\"book\">\r\n                                        <div className=\"book-top\">\r\n                                            {obj.imageLinks === undefined ?\r\n                                                <div\r\n                                                className=\"book-cover\"\r\n                                                style={{\r\n                                                width: 128,\r\n                                                height: 193\r\n                                                }}\r\n                                                >No Iamge</div>\r\n                                            :\r\n                                                <div\r\n                                                className=\"book-cover\"\r\n                                                style={{\r\n                                                width: 128,\r\n                                                height: 193,\r\n                                                backgroundImage:\r\n                                                `url(${obj.imageLinks.thumbnail})`\r\n                                                }}\r\n                                                ></div>\r\n                                            }\r\n                                            {\r\n                                                obj.hasOwnProperty('shelf') ?\r\n                                                <div className=\"book-shelf-changer\">\r\n                                                    <select onChange={handleMoving} id={obj.id} defaultValue={obj.shelf}>\r\n                                                        <option value=\"none\" className=\"disabled-option\">Move to... </option>\r\n                                                        <option value=\"currentlyReading\">Currently Reading</option>\r\n                                                        <option value=\"wantToRead\">Want to Read</option>\r\n                                                        <option value=\"read\">Read</option>\r\n                                                        <option value=\"none\">None</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                                :\r\n                                                <div className=\"book-shelf-changer\">\r\n                                                    <select onChange={handleMoving} id={obj.id}>\r\n                                                        <option value=\"none\" className=\"disabled-option\">Move to... </option>\r\n                                                        <option value=\"currentlyReading\">Currently Reading</option>\r\n                                                        <option value=\"wantToRead\">Want to Read</option>\r\n                                                        <option value=\"read\">Read</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n\r\n                                        <div className=\"book-title\">{obj.title}</div>\r\n                                        <div className=\"book-authors\">{obj.authors}</div>\r\n                                    </div>\r\n                                </li>\r\n                                \r\n                                )})}\r\n                    </ol>\r\n                );\r\n        }\r\n    },[result])\r\n\r\n    return (returnvalue);\r\n}\r\n\r\nexport default HandleResult;","/* eslint-disable eqeqeq */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-unused-vars */\r\n\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Output from './Output'\r\nimport HandleResult from '../Makeing Scripts/MakeSearchResultes'\r\n\r\nconst SearchPage = ({handleMoveToShelf, Shelf}) => {\r\n    const  [result, setResult] = useState([]);\r\n    const inputElement = useRef();\r\n\r\n    useEffect(()=>{\r\n        inputElement.current.focus();\r\n    },[])\r\n    \r\n    const handleSearch = (e) =>{\r\n        if(e.target.value !==' ' || \r\n\r\n            e.target.value !== '')\r\n        {\r\n            Output('search', setResult, e.target.value);\r\n        }\r\n        if(e.target.value.length === 0 || e.target.value ===' '){\r\n            if(e.target.value.length === 0){\r\n                setInterval(() => {\r\n                    window.location.reload();\r\n                }, 10); \r\n            }\r\n            setResult(\"Type in search box\");\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n                <Link to=\"/\" className=\"close-search\">Close</Link>\r\n                <div className=\"search-books-input-wrapper\">\r\n                    <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search by title\"\r\n                    onChange={handleSearch}\r\n                    ref={inputElement}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"search-books-results\">\r\n                <div className=\"books-grid\">\r\n                    <HandleResult result={result}  handleMoveToShelf={handleMoveToShelf} Shelf={Shelf} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default SearchPage;","import \"./App.css\";\r\nimport {Route, Routes} from 'react-router-dom'\r\nimport MainPage from \"./Components/MainPage\";\r\nimport SearchPage from \"./Components/SearchPage\";\r\nimport {useEffect, useState } from \"react\";\r\nimport Output from \"./Components/Output\";\r\n\r\nfunction App() {\r\n  const [Shelf, setShelf] = useState(['']);\r\n  const [updatestate, setUpdateState] = useState(true);\r\n  \r\n\r\n  const handleMoveToShelf = (book, shelf) =>{\r\n\r\n    if(book.shelf){\r\n      setShelf((prev) =>(prev.filter(obj => obj.id !== book.id)));\r\n        Output('update', book, shelf);\r\n    }\r\n\r\n    if(shelf === 'none' && !(book.shelf)){\r\n      setShelf((prev) =>(prev.filter(obj => obj.id !== book.id)));\r\n      Output('update', book[0],shelf);\r\n    }\r\n\r\n    if(shelf !== 'none' && !(book.shelf)){\r\n      Output('update', book[0],shelf);\r\n    }\r\n\r\n    setInterval(() => {\r\n      window.location.href = window.location.origin;\r\n    }, 400); \r\n\r\n    setUpdateState(!updatestate)\r\n  };\r\n\r\n  useEffect(() => {\r\n    Output('getall',setShelf)\r\n  }, [updatestate])\r\n\r\nreturn (\r\n    <Routes>\r\n      <Route exact path=\"/\" element={<MainPage  \r\n      Shelf={Shelf} handleMoveToShelf={handleMoveToShelf}\r\n      />}/>\r\n      \r\n      <Route exact path=\"/Search\" element={\r\n      <SearchPage handleMoveToShelf={handleMoveToShelf} Shelf={Shelf} />}/>  \r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter} from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}